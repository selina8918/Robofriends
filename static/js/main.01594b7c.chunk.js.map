{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAdF,SAACC,GACV,IAAQC,EAAiBD,EAAjBC,KAAKC,EAAYF,EAAZE,MAAMC,EAAMH,EAANG,GACnB,OACH,sBAAKC,UAAW,uDAAhB,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA4BH,EAA5B,gBACtB,gCACI,6BAAKF,IACL,4BAAIC,WCWEK,EAjBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACnB,OACI,8BAEEA,EAAOC,KAAI,SAACC,EAAKC,GACf,OACA,cAAE,EAAF,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAOO,EAAOG,GAAGV,KACjBC,MAAQM,EAAOG,GAAGT,OAHbS,SCIOC,EAZD,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aACjB,OACJ,qBAAKT,UAAU,UAAf,SACI,uBACAA,UAAU,mCACTU,KAAM,SACNC,YAAa,gBACbC,SAAYH,OCCFI,EARD,SAACjB,GACX,OAEC,aADD,CACC,OAAKkB,MAAQ,CAACC,UAAU,SAAUC,OAAO,kBAAkBC,OAAO,SAAlE,SACMrB,EAAMsB,YCgBDC,E,kDAlBX,WAAYvB,GAAO,IAAD,8BACjB,cAAMA,IACDwB,MAAO,CACRC,UAAS,GAHI,E,qDAOlB,WACIC,KAAKC,SAAS,CAAEF,UAAU,M,oBAG9B,WACD,OAAIC,KAAKF,MAAMC,SACJ,0DAEHC,KAAK1B,MAAMsB,a,GAhBMM,aC8CdC,G,wDAtCX,aAAc,IAAD,8BACT,gBAYFC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAZ1C,EAAKV,MAAQ,CACThB,OAAO,GACPwB,YAAa,IAJR,E,qDAOb,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAS,EAAKZ,SAAS,CAACnB,OAAO+B,S,oBAOzC,WACI,MAA4Bb,KAAKF,MAA1BhB,EAAP,EAAOA,OAAOwB,EAAd,EAAcA,YACRQ,EAAiBhC,EAAOiC,QAAO,SAAAC,GACjC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASZ,EAAYW,kBAEjE,OAAQnC,EAAOqC,OAGH,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,iBAAd,0BACA,cAAC,EAAD,CAAWS,aAAea,KAAKI,iBAC/B,cAAC,EAAD,UACC,cAAC,EAAD,UACG,cAAC,EAAD,CAAUtB,OAASgC,WAP7B,oBAAIpC,UAAU,WAAd,yB,GAxBQwB,cCGHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.01594b7c.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card = (props) =>{\r\n    const { name,email,id} = props;\r\n    return(\r\n <div className =' tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n     <img alt =\"robort\" src ={ `https://robohash.org/${id}?200*200\" `} />\r\n     <div> \r\n         <h4>{name}</h4>\r\n         <p>{email}</p>\r\n         </div>\r\n     </div>\r\n \r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card.js\";\r\nconst CardList = ({robots}) => {\r\nreturn (\r\n    <div>\r\n        {\r\n      robots.map((user,i) => {\r\n        return (\r\n        < Card \r\n        key={i} \r\n        id={robots[i].id}\r\n        name={ robots[i].name}\r\n        email= {robots[i].email} />\r\n        )\r\n    })\r\n   } \r\n    </div>\r\n    );\r\n}\r\nexport default CardList;\r\n","import React from \"react\";\r\nconst  SearchBox = ({searchChange}) =>{\r\n    return (\r\n<div className=\"pa2 tr \">\r\n    <input \r\n    className=\"pa3 ba b--green bg-lightest-blue\"\r\n     type ='search'  \r\n     placeholder ='search robots'\r\n     onChange = {searchChange}\r\n     />  \r\n</div>\r\n    );\r\n}\r\n   export default   SearchBox;","import React from \"react\";\r\nconst Scroll =(props) =>{\r\n    return(\r\n    //  to use style in jsx we have to use double curle bracket\r\n     <div style ={{overflowY:'scroll', border:'2px solid black',height:'800px'}}>\r\n          {props.children}\r\n     </div>\r\n    );\r\n};\r\nexport default Scroll;","import React ,{Component} from 'react';\r\n\r\n class ErrorBoundary extends Component{\r\n     constructor(props){\r\n      super(props);  \r\n      this.state ={\r\n          hasError:false\r\n      }\r\n     }\r\n\r\n     componentDidCatch(){\r\n         this.setState({ hasError: true})\r\n\r\n     }\r\n     render(){\r\n    if (this.state.hasError){\r\n        return <h1> oooops.That is not good</h1>\r\n      }\r\n     return this.props.children\r\n      }\r\n    }\r\n export default ErrorBoundary;","import React,{ Component}  from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots:[],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>  response.json())\r\n        .then(users=> {this.setState({robots:users})});\r\n        \r\n    }\r\n      onSearchChange = (event) =>{\r\n          this.setState({searchfield:event.target.value})\r\n          \r\n      }\r\n    render(){\r\n        const {robots,searchfield} =this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\nreturn !robots.length ?\r\n          <h1 className='segafont'>Loading</h1>:\r\n         (\r\n            <div className='tc'>\r\n                <h1 className='segafont f2 tl'> RoboFriends</h1> \r\n                <SearchBox searchChange ={this.onSearchChange}/> \r\n                <ErrorBoundary>\r\n                 <Scroll>\r\n                    <CardList robots ={filteredRobots}/>\r\n                 </Scroll> \r\n                 </ErrorBoundary>\r\n            </div>\r\n        );\r\n         \r\n    } \r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App/>, document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}